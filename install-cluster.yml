
- name: update all packages
  become: yes
  hosts: kafka-hosts zookeeper-hosts
  tasks:
    - pacman:
        update_cache: yes
    - pacman:
        upgrade: yes
      register: reboot_required

- name: ensure lots of open files on all kafka/zookeeper hosts
  become: yes
  hosts: kafka-hosts zookeeper-hosts
  tasks:
    - blockinfile:
        path: /etc/security/limits.conf
        block: |
          * hard nofile 100000
          * soft nofile 100000
      register: reboot_required

- name: install required packages for kafka/zookeeper hosts
  hosts: kafka-hosts zookeeper-hosts
  become: yes
  tasks:
    - pacman:
        name:
          - jdk-openjdk
          - gnu-netcat
          - wget
          - ca-certificates  
          - zip 
          - net-tools
          - vim 
          - nano 
          - tar
        state: present

- name: disable swap on kafka/zookeeper hosts
  hosts: kafka-hosts zookeeper-hosts
  become: yes
  tasks:
    - sysctl:
        name: vm.swappiness
        value: '1'
        state: present

- name: ensure all kafka/zookeeper cluster nodes have same host entries
  hosts: all
  become: yes
  tasks: 
     - blockinfile:
         path: /etc/hosts
         block: |
           192.168.1.80 pi1
           192.168.1.81 pi2
           192.168.1.82 pi3
           192.168.1.83 pi4
           192.168.1.84 pi5
           192.168.1.82 kafka1
           192.168.1.82 zookeeper1
           192.168.1.83 kafka2
           192.168.1.83 zookeeper2
           192.168.1.84 kafka3
           192.168.1.84 zookeeper3

# if a reboot is required, do that now and wait for it to come back for the rest of the play
- name: reboot kafka/zookeeper nodes iff required
  hosts: kafka-hosts zookeeper-hosts
  become: yes
  tasks:
    - reboot:
      when: reboot_required.changed
  
- name: ensure kafka/zookeeper stable software is installed under /home/acas/kafka
  hosts: kafka-hosts zookeeper-hosts
  tasks:
    - unarchive:
        src: https://archive.apache.org/dist/kafka/2.4.0/kafka_2.13-2.4.0.tgz
        dest: /home/acas
        remote_src: yes
        creates: /home/acas/kafka
      register: unpacked
    - command: mv /home/acas/kafka_2.13-2.4.0 /home/acas/kafka
      when: unpacked.changed

- name: ensure zookeeper properties are installed
  hosts: zookeeper-hosts
  become: yes
  vars:
    - id_list: { '192.168.1.82': '1', '192.168.1.83': '2', '192.168.1.84': '3' }
  tasks:
    - file:
        path: /data/zookeeper
        owner: root
        group: root
        mode: '0750'
        state: directory
    - stat: path=/data/zookeeper/myid
      register: st
    - template:
        src: templates/zookeeper.node.id.j2
        dest: /data/zookeeper/myid
        owner: root
        group: root
        mode: '0644'
      when: not st.stat.exists
    - template: 
        src: templates/zookeeper.properties.j2
        dest: /home/acas/kafka/config/zookeeper.properties
        owner: acas
        group: acas
        mode: '0644'
      register: zookeeper_properties

- name: setup zookeeper systemd service
  hosts: zookeeper-hosts
  become: yes
  vars:
    KAFKA_HOME: "/home/acas/kafka"
  tasks:
    - template:
        src: templates/zookeeper.service.j2
        dest: /etc/systemd/system/zookeeper.service
        owner: root
        group: root
        mode: '0644'
      register: zookeeper_service
    - systemd:
         daemon_reload: yes
      when: zookeeper_service.changed or zookeeper_properties.changed
    - systemd:
         enabled: yes
         state: restarted
         name: zookeeper
      ignore_errors: yes # ignore service already enabled errors

- name: ensure kafka properties are installed
  hosts: kafka-hosts
  become: yes
  vars:
    KAFKA_HOME: "/home/acas/kafka"
  tasks:
    - file:
        path: /data/kafka
        owner: root
        group: root
        mode: '0750'
        state: directory 
    - template:
        src: templates/kafka.properties.j2
        dest: "{{ KAFKA_HOME }}/config/server.properties"
        owner: root
        group: root
        mode: '0644'
      register: kafka_properties

- name: setup kafka systemd service
  hosts: kafka-hosts
  become: yes
  vars: 
    KAFKA_HOME: "/home/acas/kafka"
  tasks:
    - template:
        src: templates/kafka.service.j2
        dest: /etc/systemd/system/kafka.service
        owner: root
        group: root
        mode: '0644'
      register: kafka_service
    - systemd:
        daemon_reload: yes
      when: kafka_service.changed or kafka_properties.changed
    - systemd:
         enabled: yes
         state: restarted
         name: kafka
      ignore_errors: yes # ignore service already enabled error
