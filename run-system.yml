
# start various applications in required configurations for normal operation

- name: run kafkaspider to crawl AU web
  hosts: pi2
  gather_facts: no
  tasks:
    - command: 
         chdir: "{{ PID_ROOT }}"
         creates: "{{ PID_ROOT }}/pid.kafkaspider" # ansible wont start this cmd if this file exists
         cmd: /usr/local/bin/daemonize -E PASSWORD="{{ MONGO_RO_PASS }}" -c "{{ ROOT }}" -o log.out.kafkaspider -e log.err.kafkaspider /usr/bin/taskset -c 1,2 scrapy runspider kafkaspider.py -L INFO
      when: SPIDER == 1

- name: crawl backlog of downloaded artefacts and ingest into MongoDB (program will exit once done)
  hosts: pi1 pi2
  gather_facts: no
  tasks:
     - stat: path="{{ DATA_ROOT }}"
       register: data_root
     - command: 
         chdir: "{{ PID_ROOT }}"
         creates: "{{ PID_ROOT }}/pid.upload.artefacts"
         cmd: /usr/local/bin/daemonize -E PASSWORD="{{ MONGO_RW_PASS }}" -c "{{ ROOT }}" -o log.out.uploadartefacts -e log.err.uploadartefacts /usr/bin/taskset -c 1 python3 etl_upload_artefacts.py --dbuser rw --n 400000 --root "{{ DATA_ROOT }}" --artefacts "{{ ARTEFACT_TOPIC }}" --group "js2mongo-{{ inventory_hostname_short }}" --start earliest
       when: SPIDER == 0 and data_root.stat.exists and data_root.stat.isdir

- name: compute feature vectors and ingest into MongoDB
  hosts: pi2 192.168.1.114
  gather_facts: no
  tasks: 
     - command: 
         chdir: "{{ PID_ROOT }}"
         creates: "{{ PID_ROOT }}/pid.make.fv"
         cmd: /usr/local/bin/daemonize -E "PASSWORD={{ MONGO_RW_PASS }}" -c "{{ ROOT }}" -o log.out.makefv -e log.err.makefv /usr/bin/taskset -c 2,3 python3 etl_make_fv.py --dbuser rw --cache 10000

- name: process JS artefacts and assign best control (if any)
  hosts: pi2 pi1
  tasks:
     - command: 
         chdir: "{{ PID_ROOT }}"
         creates: "{{ PID_ROOT }}/pid.eval.controls"
         cmd: /usr/local/bin/daemonize -E "PASSWORD={{MONGO_RW_PASS}}" -c "{{ ROOT }}" -o log.out.evaljs -e log.err.evaljs /usr/bin/taskset -c 3 python3 etl_eval_js_against_controls.py --dbuser rw --v

- name: store javascript snippets embedded on HTML pages limited to only 1 CPU core
  hosts: 192.168.1.114
  tasks:
     - command: 
         chdir: "{{ PID_ROOT }}"
         creates: "{{ PID_ROOT }}/pid.snippetspider"
         cmd: /usr/local/bin/daemonize -E "PASSWORD={{MONGO_RW_PASS}}" -c "{{ ROOT }}" -o log.out.snippetspider -e log.err.snippetspider /usr/bin/taskset -c 2 scrapy  runspider snippet_spider.py -L INFO
       when: SPIDER == 1 
